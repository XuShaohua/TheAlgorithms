{
  "titleSlug": "design-most-recently-used-queue",
  "acRate": 76.2201985060882,
  "content": null,
  "difficulty": "Medium",
  "freqBar": null,
  "frontendQuestionId": "1756",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "You can store the data in an array and apply each fetch by moving the ith element to the end of the array (i.e, O(n) per operation).",
    "A better way is to use the square root decomposition technique.",
    "You can build chunks of size sqrt(n). For each fetch operation, You can search for the chunk which has the ith element and update it (i.e., O(sqrt(n)) per operation), and move this element to an empty chunk at the end."
  ],
  "isFavor": false,
  "paidOnly": true,
  "similarQuestionList": [
    {
      "difficulty": "Medium",
      "titleSlug": "lru-cache",
      "title": "LRU Cache",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Design Most Recently Used Queue",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Hash Table",
      "id": "VG9waWNUYWdOb2RlOjY=",
      "slug": "hash-table"
    },
    {
      "name": "Stack",
      "id": "VG9waWNUYWdOb2RlOjE1",
      "slug": "stack"
    },
    {
      "name": "Design",
      "id": "VG9waWNUYWdOb2RlOjI1",
      "slug": "design"
    },
    {
      "name": "Binary Indexed Tree",
      "id": "VG9waWNUYWdOb2RlOjI4",
      "slug": "binary-indexed-tree"
    },
    {
      "name": "Ordered Set",
      "id": "VG9waWNUYWdOb2RlOjYxMDcw",
      "slug": "ordered-set"
    }
  ]
}