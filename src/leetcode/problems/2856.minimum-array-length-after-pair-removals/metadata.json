{
  "titleSlug": "minimum-array-length-after-pair-removals",
  "acRate": 21.10313522643302,
  "content": "<p>You are given a <strong>0-indexed</strong> <strong>sorted</strong> array of integers <code>nums</code>.</p>\n\n<p>You can perform the following operation any number of times:</p>\n\n<ul>\n\t<li>Choose <strong>two</strong> indices, <code>i</code> and <code>j</code>, where <code>i &lt; j</code>, such that <code>nums[i] &lt; nums[j]</code>.</li>\n\t<li>Then, remove the elements at indices <code>i</code> and <code>j</code> from <code>nums</code>. The remaining elements retain their original order, and the array is re-indexed.</li>\n</ul>\n\n<p>Return <em>an integer that denotes the <strong>minimum</strong> length of </em><code>nums</code><em> after performing the operation any number of times (<strong>including zero</strong>).</em></p>\n\n<p>Note that <code>nums</code> is sorted in <strong>non-decreasing</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,4,9]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Initially, nums = [1, 3, 4, 9].\nIn the first operation, we can choose index 0 and 1 because nums[0] &lt; nums[1] &lt;=&gt; 1 &lt; 3.\nRemove indices 0 and 1, and nums becomes [4, 9].\nFor the next operation, we can choose index 0 and 1 because nums[0] &lt; nums[1] &lt;=&gt; 4 &lt; 9.\nRemove indices 0 and 1, and nums becomes an empty array [].\nHence, the minimum length achievable is 0.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,6,9]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Initially, nums = [2, 3, 6, 9]. \nIn the first operation, we can choose index 0 and 2 because nums[0] &lt; nums[2] &lt;=&gt; 2 &lt; 6. \nRemove indices 0 and 2, and nums becomes [3, 9]. \nFor the next operation, we can choose index 0 and 1 because nums[0] &lt; nums[1] &lt;=&gt; 3 &lt; 9. \nRemove indices 0 and 1, and nums becomes an empty array []. \nHence, the minimum length achievable is 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Initially, nums = [1, 1, 2].\nIn an operation, we can choose index 0 and 2 because nums[0] &lt; nums[2] &lt;=&gt; 1 &lt; 2. \nRemove indices 0 and 2, and nums becomes [1]. \nIt is no longer possible to perform an operation on the array. \nHence, the minimum achievable length is 1. \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>nums</code> is sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n",
  "difficulty": "Medium",
  "freqBar": null,
  "frontendQuestionId": "2856",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "To minimize the length of the array, we should maximize the number of operations performed.",
    "To perform <code>k</code> operations, it is optimal to use the smallest <code>k</code> values and the largest <code>k</code> values in <code>nums</code>.",
    "What is the best way to make pairs from the smallest <code>k</code> values and the largest <code>k</code> values so it is possible to remove all the pairs?",
    "If we consider the smallest <code>k</code> values and the largest <code>k</code> values as two separate <strong>sorted 0-indexed</strong> arrays, <code>a</code> and <code>b</code>, It is optimal to pair <code>a[i]</code> and <code>b[i]</code>. So, a <code>k</code> is valid if <code>a[i] < b[i]</code> for all <code>i</code> in the range <code>[0, k - 1]</code>.",
    "The greatest possible valid <code>k</code> can be found using binary search.",
    "The answer is <code>nums.length - 2 * k</code>."
  ],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Medium",
      "titleSlug": "find-the-maximum-number-of-marked-indices",
      "title": "Find the Maximum Number of Marked Indices",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Minimum Array Length After Pair Removals",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Hash Table",
      "id": "VG9waWNUYWdOb2RlOjY=",
      "slug": "hash-table"
    },
    {
      "name": "Two Pointers",
      "id": "VG9waWNUYWdOb2RlOjk=",
      "slug": "two-pointers"
    },
    {
      "name": "Binary Search",
      "id": "VG9waWNUYWdOb2RlOjEx",
      "slug": "binary-search"
    },
    {
      "name": "Greedy",
      "id": "VG9waWNUYWdOb2RlOjE3",
      "slug": "greedy"
    },
    {
      "name": "Counting",
      "id": "VG9waWNUYWdOb2RlOjYxMDYy",
      "slug": "counting"
    }
  ]
}