{
  "titleSlug": "count-the-number-of-k-big-indices",
  "acRate": 53.56538769696431,
  "content": null,
  "difficulty": "Hard",
  "freqBar": null,
  "frontendQuestionId": "2519",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "The intended solution uses Fenwick Tree.",
    "Letâ€™s describe the solution for counting the number of elements smaller than nums[i] in the range [0, i - 1], and counting in the range [i + 1, nums.length - 1] can be done similarly by simply reversing the array.",
    "Iterate from left to right and maintain the Fenwick Tree. Save the value of the query(nums[i]) and update nums[i] + 1 by 1."
  ],
  "isFavor": false,
  "paidOnly": true,
  "similarQuestionList": [
    {
      "difficulty": "Hard",
      "titleSlug": "count-of-smaller-numbers-after-self",
      "title": "Count of Smaller Numbers After Self",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "find-all-good-indices",
      "title": "Find All Good Indices",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Count the Number of K-Big Indices",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Binary Search",
      "id": "VG9waWNUYWdOb2RlOjEx",
      "slug": "binary-search"
    },
    {
      "name": "Divide and Conquer",
      "id": "VG9waWNUYWdOb2RlOjEy",
      "slug": "divide-and-conquer"
    },
    {
      "name": "Binary Indexed Tree",
      "id": "VG9waWNUYWdOb2RlOjI4",
      "slug": "binary-indexed-tree"
    },
    {
      "name": "Segment Tree",
      "id": "VG9waWNUYWdOb2RlOjI5",
      "slug": "segment-tree"
    },
    {
      "name": "Merge Sort",
      "id": "VG9waWNUYWdOb2RlOjYxMDUx",
      "slug": "merge-sort"
    },
    {
      "name": "Ordered Set",
      "id": "VG9waWNUYWdOb2RlOjYxMDcw",
      "slug": "ordered-set"
    }
  ]
}