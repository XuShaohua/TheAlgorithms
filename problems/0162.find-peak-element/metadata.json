{
  "titleSlug": "find-peak-element",
  "acRate": 45.891883810713125,
  "content": "<p>A peak element is an element that is strictly greater than its neighbors.</p>\n\n<p>Given a <strong>0-indexed</strong> integer array <code>nums</code>, find a peak element, and return its index. If the array contains multiple peaks, return the index to <strong>any of the peaks</strong>.</p>\n\n<p>You may imagine that <code>nums[-1] = nums[n] = -&infin;</code>. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.</p>\n\n<p>You must write an algorithm that runs in <code>O(log n)</code> time.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 3 is a peak element and your function should return the index number 2.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,1,3,5,6,4]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n\t<li><code>nums[i] != nums[i + 1]</code> for all valid <code>i</code>.</li>\n</ul>\n",
  "difficulty": "Medium",
  "freqBar": null,
  "frontendQuestionId": "162",
  "hasSolution": true,
  "hasVideoSolution": true,
  "hints": [],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Medium",
      "titleSlug": "peak-index-in-a-mountain-array",
      "title": "Peak Index in a Mountain Array",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "find-a-peak-element-ii",
      "title": "Find a Peak Element II",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "pour-water-between-buckets-to-make-water-levels-equal",
      "title": "Pour Water Between Buckets to Make Water Levels Equal",
      "translatedTitle": null,
      "isPaidOnly": true
    },
    {
      "difficulty": "Easy",
      "titleSlug": "count-hills-and-valleys-in-an-array",
      "title": "Count Hills and Valleys in an Array",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Easy",
      "titleSlug": "find-the-peaks",
      "title": "Find the Peaks",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Find Peak Element",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Binary Search",
      "id": "VG9waWNUYWdOb2RlOjEx",
      "slug": "binary-search"
    }
  ]
}