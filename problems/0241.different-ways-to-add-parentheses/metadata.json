{
  "titleSlug": "different-ways-to-add-parentheses",
  "acRate": 65.2869888902653,
  "content": "<p>Given a string <code>expression</code> of numbers and operators, return <em>all possible results from computing all the different possible ways to group numbers and operators</em>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>The test cases are generated such that the output values fit in a 32-bit integer and the number of different results does not exceed <code>10<sup>4</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;2-1-1&quot;\n<strong>Output:</strong> [0,2]\n<strong>Explanation:</strong>\n((2-1)-1) = 0 \n(2-(1-1)) = 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;2*3-4*5&quot;\n<strong>Output:</strong> [-34,-14,-10,-10,10]\n<strong>Explanation:</strong>\n(2*(3-(4*5))) = -34 \n((2*3)-(4*5)) = -14 \n((2*(3-4))*5) = -10 \n(2*((3-4)*5)) = -10 \n(((2*3)-4)*5) = 10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= expression.length &lt;= 20</code></li>\n\t<li><code>expression</code> consists of digits and the operator <code>&#39;+&#39;</code>, <code>&#39;-&#39;</code>, and <code>&#39;*&#39;</code>.</li>\n\t<li>All the integer values in the input expression are in the range <code>[0, 99]</code>.</li>\n</ul>\n",
  "difficulty": "Medium",
  "freqBar": null,
  "frontendQuestionId": "241",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Medium",
      "titleSlug": "unique-binary-search-trees-ii",
      "title": "Unique Binary Search Trees II",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "basic-calculator",
      "title": "Basic Calculator",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "expression-add-operators",
      "title": "Expression Add Operators",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "the-score-of-students-solving-math-expression",
      "title": "The Score of Students Solving Math Expression",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "minimize-result-by-adding-parentheses-to-expression",
      "title": "Minimize Result by Adding Parentheses to Expression",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Different Ways to Add Parentheses",
  "topicTags": [
    {
      "name": "Math",
      "id": "VG9waWNUYWdOb2RlOjg=",
      "slug": "math"
    },
    {
      "name": "String",
      "id": "VG9waWNUYWdOb2RlOjEw",
      "slug": "string"
    },
    {
      "name": "Dynamic Programming",
      "id": "VG9waWNUYWdOb2RlOjEz",
      "slug": "dynamic-programming"
    },
    {
      "name": "Recursion",
      "id": "VG9waWNUYWdOb2RlOjMx",
      "slug": "recursion"
    },
    {
      "name": "Memoization",
      "id": "VG9waWNUYWdOb2RlOjMz",
      "slug": "memoization"
    }
  ]
}