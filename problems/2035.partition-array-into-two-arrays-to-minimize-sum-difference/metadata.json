{
  "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
  "acRate": 20.021661091264818,
  "content": "<p>You are given an integer array <code>nums</code> of <code>2 * n</code> integers. You need to partition <code>nums</code> into <strong>two</strong> arrays of length <code>n</code> to <strong>minimize the absolute difference</strong> of the <strong>sums</strong> of the arrays. To partition <code>nums</code>, put each element of <code>nums</code> into <strong>one</strong> of the two arrays.</p>\n\n<p>Return <em>the <strong>minimum</strong> possible absolute difference</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"example-1\" src=\"https://assets.leetcode.com/uploads/2021/10/02/ex1.png\" style=\"width: 240px; height: 106px;\" />\n<pre>\n<strong>Input:</strong> nums = [3,9,7,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> One optimal partition is: [3,9] and [7,3].\nThe absolute difference between the sums of the arrays is abs((3 + 9) - (7 + 3)) = 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [-36,36]\n<strong>Output:</strong> 72\n<strong>Explanation:</strong> One optimal partition is: [-36] and [36].\nThe absolute difference between the sums of the arrays is abs((-36) - (36)) = 72.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"example-3\" src=\"https://assets.leetcode.com/uploads/2021/10/02/ex3.png\" style=\"width: 316px; height: 106px;\" />\n<pre>\n<strong>Input:</strong> nums = [2,-1,0,4,-2,-9]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> One optimal partition is: [2,4,-9] and [-1,0,-2].\nThe absolute difference between the sums of the arrays is abs((2 + 4 + -9) - (-1 + 0 + -2)) = 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 15</code></li>\n\t<li><code>nums.length == 2 * n</code></li>\n\t<li><code>-10<sup>7</sup> &lt;= nums[i] &lt;= 10<sup>7</sup></code></li>\n</ul>\n",
  "difficulty": "Hard",
  "freqBar": null,
  "frontendQuestionId": "2035",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "The target sum for the two partitions is sum(nums) / 2.",
    "Could you reduce the time complexity if you arbitrarily divide nums into two halves (two arrays)? Meet-in-the-Middle?",
    "For both halves, pre-calculate a 2D array where the kth index will store all possible sum values if only k elements from this half are added.",
    "For each sum of k elements in the first half, find the best sum of n-k elements in the second half such that the two sums add up to a value closest to the target sum from hint 1. These two subsets will form one array of the partition."
  ],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Medium",
      "titleSlug": "partition-equal-subset-sum",
      "title": "Partition Equal Subset Sum",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "split-array-with-same-average",
      "title": "Split Array With Same Average",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "tallest-billboard",
      "title": "Tallest Billboard",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "last-stone-weight-ii",
      "title": "Last Stone Weight II",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "fair-distribution-of-cookies",
      "title": "Fair Distribution of Cookies",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "closest-subsequence-sum",
      "title": "Closest Subsequence Sum",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "number-of-ways-to-split-array",
      "title": "Number of Ways to Split Array",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "minimum-sum-of-squared-difference",
      "title": "Minimum Sum of Squared Difference",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Easy",
      "titleSlug": "split-with-minimum-sum",
      "title": "Split With Minimum Sum",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Two Pointers",
      "id": "VG9waWNUYWdOb2RlOjk=",
      "slug": "two-pointers"
    },
    {
      "name": "Binary Search",
      "id": "VG9waWNUYWdOb2RlOjEx",
      "slug": "binary-search"
    },
    {
      "name": "Dynamic Programming",
      "id": "VG9waWNUYWdOb2RlOjEz",
      "slug": "dynamic-programming"
    },
    {
      "name": "Bit Manipulation",
      "id": "VG9waWNUYWdOb2RlOjE5",
      "slug": "bit-manipulation"
    },
    {
      "name": "Ordered Set",
      "id": "VG9waWNUYWdOb2RlOjYxMDcw",
      "slug": "ordered-set"
    },
    {
      "name": "Bitmask",
      "id": "VG9waWNUYWdOb2RlOjYxMDc4",
      "slug": "bitmask"
    }
  ]
}