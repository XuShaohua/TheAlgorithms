{
  "titleSlug": "minimum-path-sum",
  "acRate": 63.6574589381261,
  "content": "<p>Given a <code>m x n</code> <code>grid</code> filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.</p>\n\n<p><strong>Note:</strong> You can only move either down or right at any point in time.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/minpath.jpg\" style=\"width: 242px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,3,1],[1,5,1],[4,2,1]]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Because the path 1 &rarr; 3 &rarr; 1 &rarr; 1 &rarr; 1 minimizes the sum.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,2,3],[4,5,6]]\n<strong>Output:</strong> 12\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 200</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 200</code></li>\n</ul>\n",
  "difficulty": "Medium",
  "freqBar": null,
  "frontendQuestionId": "64",
  "hasSolution": true,
  "hasVideoSolution": false,
  "hints": [],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Medium",
      "titleSlug": "unique-paths",
      "title": "Unique Paths",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "dungeon-game",
      "title": "Dungeon Game",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "cherry-pickup",
      "title": "Cherry Pickup",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "minimum-path-cost-in-a-grid",
      "title": "Minimum Path Cost in a Grid",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "maximum-number-of-points-with-cost",
      "title": "Maximum Number of Points with Cost",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
      "title": "Minimum Cost Homecoming of a Robot in a Grid",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k",
      "title": "Paths in Matrix Whose Sum Is Divisible by K",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s",
      "title": "Check if There is a Path With Equal Number of 0's And 1's",
      "translatedTitle": null,
      "isPaidOnly": true
    },
    {
      "difficulty": "Medium",
      "titleSlug": "minimum-cost-of-a-path-with-special-roads",
      "title": "Minimum Cost of a Path With Special Roads",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Minimum Path Sum",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "id": "VG9waWNUYWdOb2RlOjEz",
      "slug": "dynamic-programming"
    },
    {
      "name": "Matrix",
      "id": "VG9waWNUYWdOb2RlOjYxMDUz",
      "slug": "matrix"
    }
  ]
}