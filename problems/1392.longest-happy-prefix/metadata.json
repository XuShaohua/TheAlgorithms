{
  "titleSlug": "longest-happy-prefix",
  "acRate": 45.63765193587996,
  "content": "<p>A string is called a <strong>happy prefix</strong> if is a <strong>non-empty</strong> prefix which is also a suffix (excluding itself).</p>\n\n<p>Given a string <code>s</code>, return <em>the <strong>longest happy prefix</strong> of</em> <code>s</code>. Return an empty string <code>&quot;&quot;</code> if no such prefix exists.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;level&quot;\n<strong>Output:</strong> &quot;l&quot;\n<strong>Explanation:</strong> s contains 4 prefix excluding itself (&quot;l&quot;, &quot;le&quot;, &quot;lev&quot;, &quot;leve&quot;), and suffix (&quot;l&quot;, &quot;el&quot;, &quot;vel&quot;, &quot;evel&quot;). The largest prefix which is also suffix is given by &quot;l&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababab&quot;\n<strong>Output:</strong> &quot;abab&quot;\n<strong>Explanation:</strong> &quot;abab&quot; is the largest prefix which is also suffix. They can overlap in the original string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n",
  "difficulty": "Hard",
  "freqBar": null,
  "frontendQuestionId": "1392",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "Use Longest Prefix Suffix (KMP-table) or String Hashing."
  ],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Hard",
      "titleSlug": "sum-of-scores-of-built-strings",
      "title": "Sum of Scores of Built Strings",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "maximum-deletions-on-a-string",
      "title": "Maximum Deletions on a String",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "minimum-time-to-revert-word-to-initial-state-ii",
      "title": "Minimum Time to Revert Word to Initial State II",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "minimum-time-to-revert-word-to-initial-state-i",
      "title": "Minimum Time to Revert Word to Initial State I",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Longest Happy Prefix",
  "topicTags": [
    {
      "name": "String",
      "id": "VG9waWNUYWdOb2RlOjEw",
      "slug": "string"
    },
    {
      "name": "Rolling Hash",
      "id": "VG9waWNUYWdOb2RlOjU2NTk4",
      "slug": "rolling-hash"
    },
    {
      "name": "String Matching",
      "id": "VG9waWNUYWdOb2RlOjYxMDUy",
      "slug": "string-matching"
    },
    {
      "name": "Hash Function",
      "id": "VG9waWNUYWdOb2RlOjYxMDY1",
      "slug": "hash-function"
    }
  ]
}