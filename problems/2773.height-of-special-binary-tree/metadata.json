{
  "titleSlug": "height-of-special-binary-tree",
  "acRate": 74.82806052269602,
  "content": null,
  "difficulty": "Medium",
  "freqBar": null,
  "frontendQuestionId": "2773",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "To solve the problem, we must first distinguish leaves from internal nodes.",
    "For some node v, if v.left == null or v.right == null, then v is not a leaf.",
    "If the previous condition does not hold, and v.left.right == v, then v is a leaf node.",
    "Now that we can check if some node is a leaf, we can make the function “heightOfTree” a recursive function that returns the tree's height in which its input is the root of that subtree."
  ],
  "isFavor": false,
  "paidOnly": true,
  "similarQuestionList": [],
  "status": null,
  "title": "Height of Special Binary Tree",
  "topicTags": [
    {
      "name": "Tree",
      "id": "VG9waWNUYWdOb2RlOjIw",
      "slug": "tree"
    },
    {
      "name": "Depth-First Search",
      "id": "VG9waWNUYWdOb2RlOjIx",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "id": "VG9waWNUYWdOb2RlOjIy",
      "slug": "breadth-first-search"
    },
    {
      "name": "Binary Tree",
      "id": "VG9waWNUYWdOb2RlOjYxMDU3",
      "slug": "binary-tree"
    }
  ]
}