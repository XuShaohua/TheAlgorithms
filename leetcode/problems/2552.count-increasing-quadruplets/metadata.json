{
  "titleSlug": "count-increasing-quadruplets",
  "acRate": 33.39831804281346,
  "content": "<p>Given a <strong>0-indexed</strong> integer array <code>nums</code> of size <code>n</code> containing all numbers from <code>1</code> to <code>n</code>, return <em>the number of increasing quadruplets</em>.</p>\n\n<p>A quadruplet <code>(i, j, k, l)</code> is increasing if:</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; j &lt; k &lt; l &lt; n</code>, and</li>\n\t<li><code>nums[i] &lt; nums[k] &lt; nums[j] &lt; nums[l]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,2,4,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \n- When i = 0, j = 1, k = 2, and l = 3, nums[i] &lt; nums[k] &lt; nums[j] &lt; nums[l].\n- When i = 0, j = 1, k = 2, and l = 4, nums[i] &lt; nums[k] &lt; nums[j] &lt; nums[l]. \nThere are no other quadruplets, so we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There exists only one quadruplet with i = 0, j = 1, k = 2, l = 3, but since nums[j] &lt; nums[k], we return 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>4 &lt;= nums.length &lt;= 4000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= nums.length</code></li>\n\t<li>All the integers of <code>nums</code> are <strong>unique</strong>. <code>nums</code> is a permutation.</li>\n</ul>\n",
  "difficulty": "Hard",
  "freqBar": null,
  "frontendQuestionId": "2552",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "Can you loop over all possible (j, k) and find the answer?",
    "We can pre-compute all possible (i, j) and (k, l) and store them in 2 matrices.",
    "The answer will the sum of prefix[j][k] * suffix[k][j]."
  ],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Medium",
      "titleSlug": "increasing-triplet-subsequence",
      "title": "Increasing Triplet Subsequence",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Easy",
      "titleSlug": "count-special-quadruplets",
      "title": "Count Special Quadruplets",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "count-good-triplets-in-an-array",
      "title": "Count Good Triplets in an Array",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Count Increasing Quadruplets",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "id": "VG9waWNUYWdOb2RlOjEz",
      "slug": "dynamic-programming"
    },
    {
      "name": "Binary Indexed Tree",
      "id": "VG9waWNUYWdOb2RlOjI4",
      "slug": "binary-indexed-tree"
    },
    {
      "name": "Enumeration",
      "id": "VG9waWNUYWdOb2RlOjYxMDY2",
      "slug": "enumeration"
    },
    {
      "name": "Prefix Sum",
      "id": "VG9waWNUYWdOb2RlOjYxMDY4",
      "slug": "prefix-sum"
    }
  ]
}