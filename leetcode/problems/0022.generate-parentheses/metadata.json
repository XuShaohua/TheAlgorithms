{
  "titleSlug": "generate-parentheses",
  "acRate": 74.32736828667173,
  "content": "<p>Given <code>n</code> pairs of parentheses, write a function to <em>generate all combinations of well-formed parentheses</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [\"()\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n",
  "difficulty": "Medium",
  "freqBar": null,
  "frontendQuestionId": "22",
  "hasSolution": true,
  "hasVideoSolution": true,
  "hints": [],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Medium",
      "titleSlug": "letter-combinations-of-a-phone-number",
      "title": "Letter Combinations of a Phone Number",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Easy",
      "titleSlug": "valid-parentheses",
      "title": "Valid Parentheses",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "check-if-a-parentheses-string-can-be-valid",
      "title": "Check if a Parentheses String Can Be Valid",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Generate Parentheses",
  "topicTags": [
    {
      "name": "String",
      "id": "VG9waWNUYWdOb2RlOjEw",
      "slug": "string"
    },
    {
      "name": "Dynamic Programming",
      "id": "VG9waWNUYWdOb2RlOjEz",
      "slug": "dynamic-programming"
    },
    {
      "name": "Backtracking",
      "id": "VG9waWNUYWdOb2RlOjE0",
      "slug": "backtracking"
    }
  ]
}