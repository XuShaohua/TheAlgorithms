{
  "titleSlug": "sum-of-scores-of-built-strings",
  "acRate": 39.66460452988394,
  "content": "<p>You are <strong>building</strong> a string <code>s</code> of length <code>n</code> <strong>one</strong> character at a time, <strong>prepending</strong> each new character to the <strong>front</strong> of the string. The strings are labeled from <code>1</code> to <code>n</code>, where the string with length <code>i</code> is labeled <code>s<sub>i</sub></code>.</p>\n\n<ul>\n\t<li>For example, for <code>s = &quot;abaca&quot;</code>, <code>s<sub>1</sub> == &quot;a&quot;</code>, <code>s<sub>2</sub> == &quot;ca&quot;</code>, <code>s<sub>3</sub> == &quot;aca&quot;</code>, etc.</li>\n</ul>\n\n<p>The <strong>score</strong> of <code>s<sub>i</sub></code> is the length of the <strong>longest common prefix</strong> between <code>s<sub>i</sub></code> and <code>s<sub>n</sub></code> (Note that <code>s == s<sub>n</sub></code>).</p>\n\n<p>Given the final string <code>s</code>, return<em> the <strong>sum</strong> of the <strong>score</strong> of every </em><code>s<sub>i</sub></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;babab&quot;\n<strong>Output:</strong> 9\n<strong>Explanation:</strong>\nFor s<sub>1</sub> == &quot;b&quot;, the longest common prefix is &quot;b&quot; which has a score of 1.\nFor s<sub>2</sub> == &quot;ab&quot;, there is no common prefix so the score is 0.\nFor s<sub>3</sub> == &quot;bab&quot;, the longest common prefix is &quot;bab&quot; which has a score of 3.\nFor s<sub>4</sub> == &quot;abab&quot;, there is no common prefix so the score is 0.\nFor s<sub>5</sub> == &quot;babab&quot;, the longest common prefix is &quot;babab&quot; which has a score of 5.\nThe sum of the scores is 1 + 0 + 3 + 0 + 5 = 9, so we return 9.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;azbazbzaz&quot;\n<strong>Output:</strong> 14\n<strong>Explanation:</strong> \nFor s<sub>2</sub> == &quot;az&quot;, the longest common prefix is &quot;az&quot; which has a score of 2.\nFor s<sub>6</sub> == &quot;azbzaz&quot;, the longest common prefix is &quot;azb&quot; which has a score of 3.\nFor s<sub>9</sub> == &quot;azbazbzaz&quot;, the longest common prefix is &quot;azbazbzaz&quot; which has a score of 9.\nFor all other s<sub>i</sub>, the score is 0.\nThe sum of the scores is 2 + 3 + 9 = 14, so we return 14.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n</ul>\n",
  "difficulty": "Hard",
  "freqBar": null,
  "frontendQuestionId": "2223",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "Each s_i is a suffix of the string s, so consider algorithms that can determine the longest prefix that is also a suffix.",
    "Could you use the Z array from the Z algorithm to find the score of each s_i?"
  ],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Hard",
      "titleSlug": "longest-happy-prefix",
      "title": "Longest Happy Prefix",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Sum of Scores of Built Strings",
  "topicTags": [
    {
      "name": "String",
      "id": "VG9waWNUYWdOb2RlOjEw",
      "slug": "string"
    },
    {
      "name": "Binary Search",
      "id": "VG9waWNUYWdOb2RlOjEx",
      "slug": "binary-search"
    },
    {
      "name": "Rolling Hash",
      "id": "VG9waWNUYWdOb2RlOjU2NTk4",
      "slug": "rolling-hash"
    },
    {
      "name": "Suffix Array",
      "id": "VG9waWNUYWdOb2RlOjU2Njk4",
      "slug": "suffix-array"
    },
    {
      "name": "String Matching",
      "id": "VG9waWNUYWdOb2RlOjYxMDUy",
      "slug": "string-matching"
    },
    {
      "name": "Hash Function",
      "id": "VG9waWNUYWdOb2RlOjYxMDY1",
      "slug": "hash-function"
    }
  ]
}