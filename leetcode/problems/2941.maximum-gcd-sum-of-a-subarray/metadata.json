{
  "titleSlug": "maximum-gcd-sum-of-a-subarray",
  "acRate": 48.517940717628704,
  "content": null,
  "difficulty": "Hard",
  "freqBar": null,
  "frontendQuestionId": "2941",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "Try to answer the query of asking GCD of a subarray in <code>O(1)</code> using sparse tables and preprocessing.",
    "For every index <code>L</code>, letâ€™s find the subarray starting at the index <code>L</code> and maximizing gcd-sum.",
    "Use the fact that if <code>L</code> is fixed, then by adding one more element to the end of a subarray, two things can happen: the gcd remains the same as the last gcd or becomes at least half of the last one.",
    "Now we can use binary search to find the last index <code>R</code> such that gcd of the elements of <code>nums[L..R]</code> would be equal to <code>nums[L]</code>.",
    "Now add <code>nums[R + 1]</code> to the current subarray and continue the process to find the last index that has the same gcd as the current gcd of elements."
  ],
  "isFavor": false,
  "paidOnly": true,
  "similarQuestionList": [],
  "status": null,
  "title": "Maximum GCD-Sum of a Subarray",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Math",
      "id": "VG9waWNUYWdOb2RlOjg=",
      "slug": "math"
    },
    {
      "name": "Binary Search",
      "id": "VG9waWNUYWdOb2RlOjEx",
      "slug": "binary-search"
    },
    {
      "name": "Number Theory",
      "id": "VG9waWNUYWdOb2RlOjYxMDY3",
      "slug": "number-theory"
    }
  ]
}