{
  "titleSlug": "check-if-bitwise-or-has-trailing-zeros",
  "acRate": 69.53421105126671,
  "content": "<p>You are given an array of <strong>positive</strong> integers <code>nums</code>.</p>\n\n<p>You have to check if it is possible to select <strong>two or more</strong> elements in the array such that the bitwise <code>OR</code> of the selected elements has <strong>at least </strong>one trailing zero in its binary representation.</p>\n\n<p>For example, the binary representation of <code>5</code>, which is <code>&quot;101&quot;</code>, does not have any trailing zeros, whereas the binary representation of <code>4</code>, which is <code>&quot;100&quot;</code>, has two trailing zeros.</p>\n\n<p>Return <code>true</code> <em>if it is possible to select two or more elements whose bitwise</em> <code>OR</code> <em>has trailing zeros, return</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> If we select the elements 2 and 4, their bitwise OR is 6, which has the binary representation &quot;110&quot; with one trailing zero.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,8,16]\n<strong>Output:</strong> true\n<strong>Explanation: </strong>If we select the elements 2 and 4, their bitwise OR is 6, which has the binary representation &quot;110&quot; with one trailing zero.\nOther possible ways to select elements to have trailing zeroes in the binary representation of their bitwise OR are: (2, 8), (2, 16), (4, 8), (4, 16), (8, 16), (2, 4, 8), (2, 4, 16), (2, 8, 16), (4, 8, 16), and (2, 4, 8, 16).\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,5,7,9]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no possible way to select two or more elements to have trailing zeros in the binary representation of their bitwise OR.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
  "difficulty": "Easy",
  "freqBar": null,
  "frontendQuestionId": "2980",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "Bitwise <code>OR</code> can never unset a bit. If there is a solution, there must be a solution with only a pair of elements.",
    "We can brute force the solution: enumerate all the pairs.",
    "As the least significant bit must stay unset, the question is whether the array has at least two even elements."
  ],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Easy",
      "titleSlug": "count-odd-numbers-in-an-interval-range",
      "title": "Count Odd Numbers in an Interval Range",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Easy",
      "titleSlug": "remove-trailing-zeros-from-a-string",
      "title": "Remove Trailing Zeros From a String",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Check if Bitwise OR Has Trailing Zeros",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Bit Manipulation",
      "id": "VG9waWNUYWdOb2RlOjE5",
      "slug": "bit-manipulation"
    }
  ]
}