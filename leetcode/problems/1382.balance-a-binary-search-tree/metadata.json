{
  "titleSlug": "balance-a-binary-search-tree",
  "acRate": 81.4070295608061,
  "content": "<p>Given the <code>root</code> of a binary search tree, return <em>a <strong>balanced</strong> binary search tree with the same node values</em>. If there is more than one answer, return <strong>any of them</strong>.</p>\n\n<p>A binary search tree is <strong>balanced</strong> if the depth of the two subtrees of every node never differs by more than <code>1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/10/balance1-tree.jpg\" style=\"width: 500px; height: 319px;\" />\n<pre>\n<strong>Input:</strong> root = [1,null,2,null,3,null,4,null,null]\n<strong>Output:</strong> [2,1,3,null,null,null,4]\n<b>Explanation:</b> This is not the only correct answer, [3,1,4,null,2] is also correct.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/10/balanced2-tree.jpg\" style=\"width: 224px; height: 145px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> [2,1,3]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
  "difficulty": "Medium",
  "freqBar": null,
  "frontendQuestionId": "1382",
  "hasSolution": false,
  "hasVideoSolution": false,
  "hints": [
    "Convert the tree to a sorted array using an in-order traversal.",
    "Construct a new balanced tree from the sorted array recursively."
  ],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [],
  "status": null,
  "title": "Balance a Binary Search Tree",
  "topicTags": [
    {
      "name": "Divide and Conquer",
      "id": "VG9waWNUYWdOb2RlOjEy",
      "slug": "divide-and-conquer"
    },
    {
      "name": "Greedy",
      "id": "VG9waWNUYWdOb2RlOjE3",
      "slug": "greedy"
    },
    {
      "name": "Tree",
      "id": "VG9waWNUYWdOb2RlOjIw",
      "slug": "tree"
    },
    {
      "name": "Depth-First Search",
      "id": "VG9waWNUYWdOb2RlOjIx",
      "slug": "depth-first-search"
    },
    {
      "name": "Binary Search Tree",
      "id": "VG9waWNUYWdOb2RlOjMw",
      "slug": "binary-search-tree"
    },
    {
      "name": "Binary Tree",
      "id": "VG9waWNUYWdOb2RlOjYxMDU3",
      "slug": "binary-tree"
    }
  ]
}