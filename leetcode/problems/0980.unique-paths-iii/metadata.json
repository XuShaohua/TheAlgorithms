{
  "titleSlug": "unique-paths-iii",
  "acRate": 81.69754434117232,
  "content": "<p>You are given an <code>m x n</code> integer array <code>grid</code> where <code>grid[i][j]</code> could be:</p>\n\n<ul>\n\t<li><code>1</code> representing the starting square. There is exactly one starting square.</li>\n\t<li><code>2</code> representing the ending square. There is exactly one ending square.</li>\n\t<li><code>0</code> representing empty squares we can walk over.</li>\n\t<li><code>-1</code> representing obstacles that we cannot walk over.</li>\n</ul>\n\n<p>Return <em>the number of 4-directional walks from the starting square to the ending square, that walk over every non-obstacle square exactly once</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/02/lc-unique1.jpg\" style=\"width: 324px; height: 245px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,0,0,0],[0,0,0,0],[0,0,2,-1]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> We have the following two paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)\n2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/02/lc-unique2.jpg\" style=\"width: 324px; height: 245px;\" />\n<pre>\n<strong>Input:</strong> grid = [[1,0,0,0],[0,0,0,0],[0,0,0,2]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> We have the following four paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)\n2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)\n3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)\n4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/02/lc-unique3-.jpg\" style=\"width: 164px; height: 165px;\" />\n<pre>\n<strong>Input:</strong> grid = [[0,1],[2,0]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no path that walks over every empty square exactly once.\nNote that the starting and ending square can be anywhere in the grid.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 20</code></li>\n\t<li><code>1 &lt;= m * n &lt;= 20</code></li>\n\t<li><code>-1 &lt;= grid[i][j] &lt;= 2</code></li>\n\t<li>There is exactly one starting cell and one ending cell.</li>\n</ul>\n",
  "difficulty": "Hard",
  "freqBar": null,
  "frontendQuestionId": "980",
  "hasSolution": true,
  "hasVideoSolution": false,
  "hints": [],
  "isFavor": false,
  "paidOnly": false,
  "similarQuestionList": [
    {
      "difficulty": "Hard",
      "titleSlug": "sudoku-solver",
      "title": "Sudoku Solver",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Medium",
      "titleSlug": "unique-paths-ii",
      "title": "Unique Paths II",
      "translatedTitle": null,
      "isPaidOnly": false
    },
    {
      "difficulty": "Hard",
      "titleSlug": "word-search-ii",
      "title": "Word Search II",
      "translatedTitle": null,
      "isPaidOnly": false
    }
  ],
  "status": null,
  "title": "Unique Paths III",
  "topicTags": [
    {
      "name": "Array",
      "id": "VG9waWNUYWdOb2RlOjU=",
      "slug": "array"
    },
    {
      "name": "Backtracking",
      "id": "VG9waWNUYWdOb2RlOjE0",
      "slug": "backtracking"
    },
    {
      "name": "Bit Manipulation",
      "id": "VG9waWNUYWdOb2RlOjE5",
      "slug": "bit-manipulation"
    },
    {
      "name": "Matrix",
      "id": "VG9waWNUYWdOb2RlOjYxMDUz",
      "slug": "matrix"
    }
  ]
}